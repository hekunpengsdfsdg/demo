<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Customer" autoMapping="true"></resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    Id, `name`, gender, age, iphone, certType, certNo,address,status
  </sql>
  <select id="selectAll"  resultMap="BaseResultMap">
    select  Id, `name`, gender, age, iphone, certType, certNo,address,status from  customer
</select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from customer
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from customer
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="com.aaa.entity.Customer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into customer (`name`, gender, age, 
      iphone, certType, certNo,address,status
      )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{iphone,jdbcType=VARCHAR}, #{certType,jdbcType=VARCHAR}, #{certNo,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="com.aaa.entity.Customer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="iphone != null">
        iphone,
      </if>
      <if test="certType != null">
        certType,
      </if>
      <if test="certNo != null">
        certNo,
      </if>
       <if test="address != null">
        address,
      </if>
       <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="iphone != null">
        #{iphone,jdbcType=VARCHAR},
      </if>
      <if test="certType != null">
        #{certType,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null">
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.entity.Customer">
    <!--@mbg.generated-->
    update customer
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="iphone != null">
        iphone = #{iphone,jdbcType=VARCHAR},
      </if>
      <if test="certType != null">
        certType = #{certType,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null">
        certNo = #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.entity.Customer">
    <!--@mbg.generated-->
    update customer
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      iphone = #{iphone,jdbcType=VARCHAR},
      certType = #{certType,jdbcType=VARCHAR},
      certNo = #{certNo,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>